<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://fastsocks.github.io/news/article-21866.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>SpringBoot之HandlerInterceptor拦截器的使用</title>
        <meta name="description" content="拦截器我想大家都并不陌生，最常用的登录拦截、或是权限校验、或是防重复提交、或是根据业务像12306去校验购票时间,总之可以去做很多的事情。 我仔细想了想 这里我分三篇博客来介绍HandlerInter" />
        <link rel="icon" href="/assets/website/img/fastsocks/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="/assets/website/css/fastsocks/app.css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:300,400,500,600,700,800,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.icons8.com/fonts/line-awesome/1.1/css/line-awesome-font-awesome.min.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-H5R4331M78"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-H5R4331M78');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg fixed-top py-3 navbar-light" id="mainNav">
        <div class="container"> 
                        <a class="navbar-brand" href="/">
                <span>Fast Socks</span>
            </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation"> <span class="navbar-toggler-icon"></span> </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                                        <li class="nav-item"> <a class="nav-link" href="/">首页</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/free-nodes/">免费节点</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/paid-subscribe/">推荐机场</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/news/">新闻资讯</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="#">关于</a> </li>
                    <li class="nav-item"> <a class="nav-link" href="#">联系</a> </li>
                </ul>
            </div>
        </div>
    </nav>
    <main role="main">
        <section class="py-5 position-relative">
            <div class="shape-wrap shape-header"><img src="./assets/img/blob-shape-1.svg" alt=""></div>
            <div class="container">
                <div class="row align-items-center text-center text-lg-left mb-5">
                    <div class="col-md-9 col-lg-6 col-xl-5 mb-4 mb-md-5 mb-lg-0">
                        <h1 class="h1">SpringBoot之HandlerInterceptor拦截器的使用</h1>
                        <p class="lead">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                    <div class="col-md-9 col-lg-6 col-xl-7 text-center">
                        <img src="/assets/website/img/fastsocks/liramail_dribbble.jpg" alt="liramail_dribbble" class="img-fluid rounded">
                    </div>
                </div>
                <!-- end: -->
            </div>
        </section>
        <div class="container">
            <hr>
        </div>
        <div class="container py-5">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> </h1> <p>拦截器我想大家都并不陌生，最常用的登录拦截、或是权限校验、或是防重复提交、或是根据业务像12306去校验购票时间,总之可以去做很多的事情。<br /> 我仔细想了想<br /> 这里我分三篇博客来介绍HandlerInterceptor的使用，从基本的使用、到自定义注解、最后到读取body中的流解决无法多次读取的问题。</p> <h2><a id="1_4" rel="nofollow"></a>1、定义实现类</h2> <p>定义一个Interceptor 非常简单方式也有几种，我这里简单列举两种<br /> 1、类要实现Spring 的HandlerInterceptor 接口<br /> 2、类继承实现了HandlerInterceptor 接口的类，例如 已经提供的实现了HandlerInterceptor 接口的抽象类HandlerInterceptorAdapter</p> <blockquote> <p>这里博主用的是第二种方法继承HandlerInterceptorAdapter</p> </blockquote> <h2><a id="2HandlerInterceptor_10" rel="nofollow"></a>2、HandlerInterceptor方法介绍</h2> <pre><code> 	boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) 			throws Exception;  	void postHandle( 			HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) 			throws Exception;  	void afterCompletion( 			HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) 			throws Exception;</code></pre> <ul> <li>preHandle：在业务处理器处理请求之前被调用。预处理，可以进行编码、安全控制、权限校验等处理；</li> <li>postHandle：在业务处理器处理请求执行完成后，生成视图之前执行。后处理（调用了Service并返回ModelAndView，但未进行页面渲染），有机会修改ModelAndView （这个博主就基本不怎么用了）；</li> <li>afterCompletion：在DispatcherServlet完全处理完请求后被调用，可用于清理资源等。返回处理（已经渲染了页面）；</li> </ul> <p>接下来让我们来实现一个登陆 and 访问权限校验的拦截器吧</p> <h2><a id="_31" rel="nofollow"></a>拦截器实现</h2> <ul> <li>新建TestFilter</li> </ul> <pre><code>package com.xxx.core.filter;  import com.xxx.common.exception.FastRuntimeException; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.web.servlet.ModelAndView; import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;  import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse;   public class TestFilter extends HandlerInterceptorAdapter { 	private final Logger logger = LoggerFactory.getLogger(TestFilter.class); 	@Override 	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) 			throws Exception { 		logger.info("request请求地址path[{}] uri[{}]", request.getServletPath(),request.getRequestURI()); 		//request.getHeader(String) 从请求头中获取数据 		//从请求头中获取用户token（登陆凭证根据业务而定） 		Long userId= getUserId(request.getHeader("H-User-Token")); 		if (userId != null &amp;&amp; checkAuth(userId,request.getRequestURI())){ 			return true; 		} 		//这里的异常是我自定义的异常，系统抛出异常后框架捕获异常然后转为统一的格式返回给前端， 其实这里也可以返回false 		throw new FastRuntimeException(20001,"No access"); 	}  	/** 	 * 根据token获取用户ID 	 * @param userToken 	 * @return 	 */ 	private Long getUserId(String userToken){ 		Long userId = null; 		return userId; 	}  	/** 	 * 校验用户访问权限 	 * @param userId 	 * @param requestURI 	 * @return 	 */ 	private boolean checkAuth(Long userId,String requestURI){ 		return true; 	}  	@Override 	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, 						   ModelAndView modelAndView) throws Exception {}  	@Override 	public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) 			throws Exception {} }</code></pre> <ul> <li>新建WebAppConfigurer 实现WebMvcConfigurer接口</li> </ul> <blockquote> <p>其实以前都是继承WebMvcConfigurerAdapter类 不过springBoot2.0以上 WebMvcConfigurerAdapter 方法过时，有两种替代方案：<br /> 1、继承WebMvcConfigurationSupport<br /> 2、实现WebMvcConfigurer<br /> 但是继承WebMvcConfigurationSupport会让Spring-boot对mvc的自动配置失效。根据项目情况选择。现在大多数项目是前后端分离，并没有对静态资源有自动配置的需求所以继承WebMvcConfigurationSupport也未尝不可。</p> </blockquote> <pre><code>@Configuration public class WebAppConfigurer implements WebMvcConfigurer {      @Override     public void addInterceptors(InterceptorRegistry registry) {         // 可添加多个         registry.addInterceptor(new TestFilter()).addPathPatterns("/**");     }      .... }</code></pre> <blockquote> <p>其实下面还有很多方法我这里就省略了，过滤器可以添加多个，可以指定Path，这里的/**是对所有的请求都做拦截。</p> </blockquote> <p>是否感觉配置这个地址是不特别方便？下一篇博客介绍2.0版本引入注解来协助完成一系列的拦截任务。<br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/zhibo_lv/article/details/81738940"  rel="nofollow">SpringBoot之HandlerInterceptor拦截器的使用 ——（二）自定义注解</a><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/zhibo_lv/article/details/81875705"  rel="nofollow">SpringBoot之HandlerInterceptor拦截器的使用 ——（三）获取请求参数解决java.io.IOException: Stream closed</a><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/zhibo_lv/article/details/81905300"  rel="nofollow">SpringBoot之HandlerInterceptor拦截器的使用 ——（四）防重复提交</a></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-21422.htm">CountDownLatch和CyclicBarrier：如何让多线程步调一致</a></p>
                                        <p>下一个：<a href="/news/article-21867.htm">宠物领养协议书模板（宠物领养协议书模板电子版）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-22790.htm" title="动物注射方法有哪几种（动物注射方法有哪几种）">动物注射方法有哪几种（动物注射方法有哪几种）</a></li>
                        <li class="py-2"><a href="/news/article-21866.htm" title="SpringBoot之HandlerInterceptor拦截器的使用">SpringBoot之HandlerInterceptor拦截器的使用</a></li>
                        <li class="py-2"><a href="/news/article-26497.htm" title="MySQL FROM_UNIXTIME()函数的用途是什么？">MySQL FROM_UNIXTIME()函数的用途是什么？</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-26-free-subscribe-node.htm" title="11月26日→18M/S|2024年最新免费节点Fast Socks订阅链接地址">11月26日→18M/S|2024年最新免费节点Fast Socks订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-29-node-share-links.htm" title="9月29日→18.5M/S|2024年最新免费节点Fast Socks订阅链接地址">9月29日→18.5M/S|2024年最新免费节点Fast Socks订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-19577.htm" title="大型饲料颗粒机价格（大型饲料颗粒机价格是多少钱）">大型饲料颗粒机价格（大型饲料颗粒机价格是多少钱）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-1-free-high-speed-nodes.htm" title="10月1日→21.7M/S|2024年最新免费节点Fast Socks订阅链接地址">10月1日→21.7M/S|2024年最新免费节点Fast Socks订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-20-free-node-subscribe-links.htm" title="10月20日→19.5M/S|2024年最新免费节点Fast Socks订阅链接地址">10月20日→19.5M/S|2024年最新免费节点Fast Socks订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-9-free-subscribe-node.htm" title="12月9日→22.3M/S|2024年最新免费节点Fast Socks订阅链接地址">12月9日→22.3M/S|2024年最新免费节点Fast Socks订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-26-free-high-speed-nodes.htm" title="10月26日→21.8M/S|2024年最新免费节点Fast Socks订阅链接地址">10月26日→21.8M/S|2024年最新免费节点Fast Socks订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
                <footer class="pt-4 pb-5 bg-light position-relative">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <hr class="border-2x color-10 my-2">
                    </div>
                    <div class="col-lg-5 mt-4">
                        <p class="color-7 mb-0 pr-md-11 pr-lg-0">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">Fast Socks机场节点订阅官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
                <!--/.row-->
            </div>
            <!--/.container-->
        </footer>

        <script src="/assets/website/js/frontend/fastsocks/jquery-3.5.1.min.js"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        <script src="/assets/website/js/frontend/fastsocks/app.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </main>
</body>

</html>