<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://fastsocks.github.io/news/article-24166.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Java类的加载、链接、初始化</title>
        <meta name="description" content="Java 语言的类型可以分为两大类：基本类型（primitive types）和引用类型（reference types），基本类型是由Java 虚拟机预先定义好的。引用类型，Java 将其细分为四种" />
        <link rel="icon" href="/assets/website/img/fastsocks/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Fast Socks机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://fastsocks.github.io/news/article-24166.htm" />
    <meta property="og:site_name" content="Fast Socks机场节点订阅官网" />
    <meta property="og:title" content="Java类的加载、链接、初始化" />
    <meta property="og:image" content="https://fastsocks.github.io/uploads/20240906-1/2a158fb0a8ef682b298343cafb7c3201.webp" />
        <meta property="og:release_date" content="2024-12-11T09:53:19" />
    <meta property="og:updated_time" content="2024-12-11T09:53:19" />
        <meta property="og:description" content="Java 语言的类型可以分为两大类：基本类型（primitive types）和引用类型（reference types），基本类型是由Java 虚拟机预先定义好的。引用类型，Java 将其细分为四种" />
        
    <link rel="stylesheet" href="/assets/website/css/fastsocks/app.css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:300,400,500,600,700,800,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.icons8.com/fonts/line-awesome/1.1/css/line-awesome-font-awesome.min.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Java类的加载、链接、初始化">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-H5R4331M78"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-H5R4331M78');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg fixed-top py-3 navbar-light" id="mainNav">
        <div class="container"> 
                        <a class="navbar-brand" href="/">
                <span>Fast Socks</span>
            </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation"> <span class="navbar-toggler-icon"></span> </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                                        <li class="nav-item"> <a class="nav-link" href="/">首页</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/free-nodes/">免费节点</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/paid-subscribe/">推荐机场</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/news/">新闻资讯</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="#">关于</a> </li>
                    <li class="nav-item"> <a class="nav-link" href="#">联系</a> </li>
                </ul>
            </div>
        </div>
    </nav>
    <main role="main">
        <section class="py-5 position-relative">
            <div class="shape-wrap shape-header"><img src="./assets/img/blob-shape-1.svg" alt=""></div>
            <div class="container">
                <div class="row align-items-center text-center text-lg-left mb-5">
                    <div class="col-md-9 col-lg-6 col-xl-5 mb-4 mb-md-5 mb-lg-0">
                        <h1 class="h1">Java类的加载、链接、初始化</h1>
                        <p class="lead">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                    <div class="col-md-9 col-lg-6 col-xl-7 text-center">
                        <img src="/assets/website/img/fastsocks/liramail_dribbble.jpg" alt="liramail_dribbble" class="img-fluid rounded">
                    </div>
                </div>
                <!-- end: -->
            </div>
        </section>
        <div class="container">
            <hr>
        </div>
        <div class="container py-5">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p style="text-indent:33px;">Java 语言的类型可以分为两大类：基本类型（primitive types）和引用类型（reference types），基本类型是由Java 虚拟机预先定义好的。引用类型，Java 将其细分为四种：类、接口、数组类和泛型参数。由于泛型参数会在编译过程中被擦除（我会在专栏的第二部分详细介绍），因此 Java 虚拟机实际上只有前三种。在类、接口和数组类中，数组类是由 Java 虚拟机直接生成的，其他两种则有对应的字节流(如class文件)。</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220817/ba289d196c6981021b09be3dc61ebee7.jpg"></p> <p style="margin-left:0cm;"><strong>加载</strong></p> <p>Class 只有在必须要使用的时候才会被装载，Java 虚拟机不会无条件地装载 Class 类型。Java 虚拟机规定，一个类或接口在初次使用前，必须要进行初始化。这里指的 “使用”, 是指主动使用，主动使用只有下列几种情况:</p> <ul> <li>当创建一个类的实例时，比如使用 new 关键字，或者通过反射、克隆、反序列化。</li> <li>当调用类的静态方法时，即当使用了字节码 invokestatic 指令。</li> <li>当使用类或接口的静态字段时 (final 常量除外), 比如，使用 getstatic 或者 putstatic 指令。</li> <li>当使用 java.lang.reflect 包中的方法反射类的方法时。</li> <li>当初始化子类时，要求先初始化父类。</li> <li>作为启动虚拟机，含有 main 方法的那个类。</li> </ul> <p>加载类处于类装载的第一个阶段。在加载类时，Java 虚拟机必须完成以下工作:</p> <ul> <li>通过类的全名，获取类的二进制数据流。</li> <li>解析类的二进制数据流为方法区内的数据结构。</li> <li>创建 java.lang.Class 类的实例，表示该类型。</li> </ul> <p style="text-indent:33px;">启动类加载器负责加载最为基础、最为重要的类，比如存放在 JRE 的 lib目录下 jar 包中的类（以及由虚拟机参数 -Xbootclasspath 指定的类）。除了启动类加载器之外，另外两个重要的类加载器是扩展类加载器（extension class loader）和应用类加载器（application class loader），均由 Java 核心类库提供。</p> <p style="text-indent:33px;">扩展类加载器的父类加载器是启动类加载器。它负责加载相对次要、但又通用的类，比如存放在 JRE 的 lib/ext 目录下 jar 包中的类（以及由系统变量 java.ext.dirs 指定的类）。</p> <p style="text-indent:33px;">应用类加载器的父类加载器则是扩展类加载器。它负责加载应用程序路径下的类。（这里的应用程序路径，便是指虚拟机参数 -cp/-classpath、系统变量 java.class.path 或环境变量CLASSPATH 所指定的路径。）默认情况下，应用程序中包含的类便是由应用类加载器加载的。</p> <p style="margin-left:0cm;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 加载采用双亲委派模型，每当一个类加载器接收到加载请求时，它会先将请求转发给父类加载器。在父类加载器没有找到所请求的类的情况下，该类加载器才会尝试去加载。</p> <p style="margin-left:0cm;"><strong>链接</strong></p> <p style="text-indent:33px;">链接指将创建成的类合并至 Java 虚拟机中，使之能够执行的过程。它可分为验证、准备以及解析三个阶段。</p> <ul> <li style="margin-left:0cm;">验证：确保被加载类能够满足 Java 虚拟机的约束条件。一般Java 编译器生成的类文件必然满足 Java 虚拟机的约束条件。字节码注入的例子之后会介绍。</li> <li style="margin-left:0cm;">准备：则是为被加载类的<strong>静态字段</strong>分配内存。构造其他跟类层次相关的数据结构，比如说用来实现虚方法的动态绑定的方法表。</li> <li style="margin-left:0cm;">解析：<strong>解析阶段的工作就是将类、接口、字段和方法的符号引用转为直接引用。</strong>符号引用就是一些字面量的引用，和虚拟机的内部数据结构和内存布局无关。在 class 文件被加载至 Java 虚拟机之前，这个类无法知道其他类及其方法、字段所对应的具体地址，甚至不知道自己方法、字段的地址。因此，每当需要引用这些成员时，Java 编译器会生成一个<strong>符号引用</strong>。在运行阶段，这个符号引用一般都能够无歧义地定位到具体目标上。例如，对于一个方法调用，编译器会生成一个包含目标方法所在类的名字、目标方法的名字、接收参数类型以及返回值类型的符号引用，来指代所要调用的方法。解析阶段的目的，正是将这些符号引用解析成为实际引用。如果符号引用指向一个未被加载的类，或者未被加载类的字段或方法，那么解析将触发这个类的加载（但未必触发这个类的链接以及初始化。）</li> </ul> <p style="margin-left:0cm;"><strong>初始化</strong></p> <p style="text-indent:33px;">要初始化一个静态字段，可以在声明时直接赋值，也可以在静态代码块中对其赋值。如果直接赋值的静态字段被 final 所修饰，并且它的类型是基本类型或字符串时，那么该字段便会被 Java 编译器标记成常量值（ConstantValue），其初始化直接由 Java 虚拟机完成。除此之外的直接赋值操作，以及所有静态代码块中的代码，则会被 Java 编译器置于同一方法中，并把它命名为 &lt; clinit &gt;。</p> <p style="text-indent:33px;">初始化，便是为标记为常量值的字段赋值，以及执行 &lt; clinit &gt; 方法的过程。Java 虚拟机会通过加锁来确保类的 &lt; clinit &gt; 方法仅被执行一次。初始化触发的条件有：</p> <p style="margin-left:0cm;">1. 当虚拟机启动时，初始化用户指定的主类(main)；</p> <p style="margin-left:0cm;">2. 当遇到用以新建目标类实例的 new 指令时，初始化 new 指令的目标类；</p> <p style="margin-left:0cm;">3. 当遇到调用静态方法的指令时，初始化该静态方法所在的类；</p> <p style="margin-left:0cm;">4. 当遇到访问静态字段的指令时，初始化该静态字段所在的类；</p> <pre><code class="language-java">public class Singleton {      private Singleton() {}      private static class LazyHolder {          static final Singleton INSTANCE = new Singleton();      }      public static Singleton getInstance() {          return LazyHolder.INSTANCE;              }  }</code></pre> <p style="text-indent:33px;">只有当调用Singleton.getInstance 时，程序才会访问 LazyHolder.INSTANCE，才会触发对LazyHolder 的初始化</p> <p style="margin-left:0cm;">5. 子类的初始化会触发父类的初始化；</p> <p style="margin-left:0cm;">6. 如果一个接口定义了 default 方法，那么直接实现或者间接实现该接口的类的初始化，会触发该接口的初始化；</p> <p style="margin-left:0cm;">7. 使用反射 API 对某个类进行反射调用时，初始化这个类；</p> <p style="margin-left:0cm;">8. 当初次调用 MethodHandle 实例时，初始化该 MethodHandle 指向的方法所在的类。</p> <p style="margin-left:0cm;"> <p style="margin-left:0cm;">例子：</p> <pre><code class="language-java">public class Singleton {      private Singleton() {}      private static class LazyHolder {          static final Singleton INSTANCE = new Singleton();      static {          System.out.println("LazyHolder.&lt;clinit&gt;");          }      }  public static Object getInstance(boolean flag) {      if (flag) return new LazyHolder[2];      return LazyHolder.INSTANCE;  }  public static void main(String[] args) {      getInstance(true);      System.out.println("----");      getInstance(false);  }  }</code></pre> <p style="text-indent:33px;"><span style="color:#4c4c4c;">新建数组new LazyHolder[2]会加载元素类LazyHolder；不会初始化元素类。虚拟机必须知道（加载）有这个类，才能创建这个类的数组（容器），但是这个类并没有被使用到（没有达到初始化的条件），所以不会初始化，也不会链接元素类LazyHolder；</span></p> <p style="text-indent:33px;"><span style="color:#4c4c4c;">调用getInstance(false)的时候约等于告诉虚拟机，我要使用这个类了，你把这个类造好（链接），然后把static修饰的字符赋予变量（初始化）。</span></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-23699.htm">兽药排名前五十名（兽药排名前五十名有哪些）</a></p>
                                        <p>下一个：<a href="/news/article-24169.htm">建议穷人养的10种狗50元一只（适合穷养的狗狗）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-21867.htm" title="宠物领养协议书模板（宠物领养协议书模板电子版）">宠物领养协议书模板（宠物领养协议书模板电子版）</a></li>
                        <li class="py-2"><a href="/news/article-34048.htm" title="狐狸领养网站大全（狐狸领养网站大全免费）">狐狸领养网站大全（狐狸领养网站大全免费）</a></li>
                        <li class="py-2"><a href="/news/article-19577.htm" title="大型饲料颗粒机价格（大型饲料颗粒机价格是多少钱）">大型饲料颗粒机价格（大型饲料颗粒机价格是多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-46793.htm" title="上海宠物狗基地（上海宠物狗基地地址）">上海宠物狗基地（上海宠物狗基地地址）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-4-free-node-subscribe-links.htm" title="1月4日→19M/S|2025年最新免费节点Fast Socks订阅链接地址">1月4日→19M/S|2025年最新免费节点Fast Socks订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-21866.htm" title="SpringBoot之HandlerInterceptor拦截器的使用">SpringBoot之HandlerInterceptor拦截器的使用</a></li>
                        <li class="py-2"><a href="/news/article-19123.htm" title="vue-cli中devServer.proxy相关配置项的使用_vue.js">vue-cli中devServer.proxy相关配置项的使用_vue.js</a></li>
                        <li class="py-2"><a href="/news/article-36198.htm" title="动物疫苗龙头股排名（动物疫苗龙头股一览）">动物疫苗龙头股排名（动物疫苗龙头股一览）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-2-free-node-subscribe-links.htm" title="1月2日→18.8M/S|2025年最新免费节点Fast Socks订阅链接地址">1月2日→18.8M/S|2025年最新免费节点Fast Socks订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-23236.htm" title="ubuntu18.04 使用vscode #include＜iostream＞产生蓝色波浪线，未检测路径">ubuntu18.04 使用vscode #include＜iostream＞产生蓝色波浪线，未检测路径</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
                <footer class="pt-4 pb-5 bg-light position-relative">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <hr class="border-2x color-10 my-2">
                    </div>
                    <div class="col-lg-5 mt-4">
                        <p class="color-7 mb-0 pr-md-11 pr-lg-0">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">Fast Socks机场节点订阅官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
                <!--/.row-->
            </div>
            <!--/.container-->
        </footer>

        <script src="/assets/website/js/frontend/fastsocks/jquery-3.5.1.min.js"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        <script src="/assets/website/js/frontend/fastsocks/app.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </main>
</body>

</html>