<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://fastsocks.github.io/news/article-56221.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>在VS2015下配置websocket++,并用C++搭建一个简单的客户端</title>
        <meta name="description" content="最近在做一个项目，需要在C++中通过WebSocket和服务器进行通信，但我们在C++中并不能直接使用WebSocket，于是上网搜索后发现websocket++这个库很合适。 Websocket是基" />
        <link rel="icon" href="/assets/website/img/fastsocks/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Fast Socks机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://fastsocks.github.io/news/article-56221.htm" />
    <meta property="og:site_name" content="Fast Socks机场节点订阅官网" />
    <meta property="og:title" content="在VS2015下配置websocket++,并用C++搭建一个简单的客户端" />
    <meta property="og:image" content="https://fastsocks.github.io/uploads/20240906-1/f9a18e373089eb7205051388afe335fa.webp" />
        <meta property="og:release_date" content="2025-02-14T10:00:47" />
    <meta property="og:updated_time" content="2025-02-14T10:00:47" />
        <meta property="og:description" content="最近在做一个项目，需要在C++中通过WebSocket和服务器进行通信，但我们在C++中并不能直接使用WebSocket，于是上网搜索后发现websocket++这个库很合适。 Websocket是基" />
        
    <link rel="stylesheet" href="/assets/website/css/fastsocks/app.css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:300,400,500,600,700,800,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.icons8.com/fonts/line-awesome/1.1/css/line-awesome-font-awesome.min.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="在VS2015下配置websocket++,并用C++搭建一个简单的客户端">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-H5R4331M78"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-H5R4331M78');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg fixed-top py-3 navbar-light" id="mainNav">
        <div class="container"> 
                        <a class="navbar-brand" href="/">
                <span>Fast Socks</span>
            </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation"> <span class="navbar-toggler-icon"></span> </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                                        <li class="nav-item"> <a class="nav-link" href="/">首页</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/free-nodes/">免费节点</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/paid-subscribe/">推荐机场</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/client.htm">客户端</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/news/">新闻资讯</a> </li>
                                    </ul>
            </div>
        </div>
    </nav>
    <main role="main">
        <section class="py-5 position-relative">
            <div class="shape-wrap shape-header"><img src="./assets/img/blob-shape-1.svg" alt=""></div>
            <div class="container">
                <div class="row align-items-center text-center text-lg-left mb-5">
                    <div class="col-md-9 col-lg-6 col-xl-5 mb-4 mb-md-5 mb-lg-0">
                        <h1 class="h1">在VS2015下配置websocket++,并用C++搭建一个简单的客户端</h1>
                        <p class="lead">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                    <div class="col-md-9 col-lg-6 col-xl-7 text-center">
                        <img src="/assets/website/img/fastsocks/liramail_dribbble.jpg" alt="liramail_dribbble" class="img-fluid rounded">
                    </div>
                </div>
                <!-- end: -->
            </div>
        </section>
        <div class="container">
            <hr>
        </div>
        <div class="container py-5">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> </h1> <ul> <li>最近在做一个项目，需要在C++中通过WebSocket和服务器进行通信，但我们在C++中并不能直接使用WebSocket，于是上网搜索后发现websocket++这个库很合适。</li> <li>Websocket是基于HTTP协议的，或者说借用了HTTP的协议来完成一部分握手，并且它很好的支持了长连接，相较于ajax轮询和long poll更加节省资源。</li> <li>具体关于WebSocket的相关知识，可以参考知乎上这篇文章： <br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.zhihu.com/question/20215561"  rel="nofollow">https://www.zhihu.com/question/20215561</a> </li> </ul> </h1> <ul> <li> <p>去GitHub上下载websocket++ <br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/zaphoyd/websocketpp"  rel="nofollow">https://github.com/zaphoyd/websocketpp</a></p> </li> <li> <p>搭建好Boost，直接到以下网址下载编译好的，省去自己编译了（选择自己对应的ms版本，如VS2015 64位的选择boost_1_61_0-msvc-14.0-64.exe） <br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://sourceforge.NET/projects/boost/files/boost-binaries/1.61.0/"  rel="nofollow">https://sourceforge.NET/projects/boost/files/boost-binaries/1.61.0/</a></p> </li> </ul> </h1> <ul> <li>第一步，新建一个工程 <br /> 将项目属性调整为Release x64模式，如下图所示</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230212/29c821194c8f647121b8715837a0739d.jpg" alt="在VS2015下配置websocket++,并用C++搭建一个简单的客户端"></p> <ul> <li>第二步，打开 项目—项目属性 窗口，选择VC++目录 <br /> 在“包含目录”下添加boost和websocket++的目录，如下图所示</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230212/f4f6116ea54262f96ad76ee76387fcca.jpg" alt="在VS2015下配置websocket++,并用C++搭建一个简单的客户端"></p> <ul> <li>第三步，在“库目录”下添加boost的lib包目录</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230212/cbd24dd58e7db7d7406858f21993d03e.jpg" alt="在VS2015下配置websocket++,并用C++搭建一个简单的客户端"></p> <ul> <li>点击“应用”，然后“确定”，OK大功告成。</li> </ul> </h1> <ul> <li>我们到下载的websocket++文件夹目录下的websocketpp-master\examples\echo_client中的C++代码文件拷贝出来，在工程里测试运行即可，顺便附上代码：</li> </ul> <pre class="prettyprint"><code class="hljs cpp"><span class="hljs-preprocessor">#include &lt;websocketpp/config/asio_no_tls_client.hpp&gt;</span> <span class="hljs-preprocessor">#include &lt;websocketpp/client.hpp&gt;</span>  <span class="hljs-preprocessor">#include &lt;iostream&gt;</span>  <span class="hljs-keyword">typedef</span> websocketpp::client&lt;websocketpp::config::asio_client&gt; client;  <span class="hljs-keyword">using</span> websocketpp::lib::placeholders::_1; <span class="hljs-keyword">using</span> websocketpp::lib::placeholders::_2; <span class="hljs-keyword">using</span> websocketpp::lib::bind;  <span class="hljs-comment">// pull out the type of messages sent by our config</span> <span class="hljs-keyword">typedef</span> websocketpp::config::asio_client::message_type::ptr message_ptr;  <span class="hljs-comment">// This message handler will be invoked once for each incoming message. It</span> <span class="hljs-comment">// prints the message and then sends a copy of the message back to the server.</span> <span class="hljs-keyword">void</span> on_message(client* c, websocketpp::connection_hdl hdl, message_ptr msg) {     <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"on_message called with hdl: "</span> &lt;&lt; hdl.lock().get()               &lt;&lt; <span class="hljs-string">" and message: "</span> &lt;&lt; msg-&gt;get_payload()               &lt;&lt; <span class="hljs-built_in">std</span>::endl;       websocketpp::lib::error_code ec;      c-&gt;send(hdl, msg-&gt;get_payload(), msg-&gt;get_opcode(), ec);     <span class="hljs-keyword">if</span> (ec) {         <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"Echo failed because: "</span> &lt;&lt; ec.message() &lt;&lt; <span class="hljs-built_in">std</span>::endl;     } }  <span class="hljs-keyword">int</span> main(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span>* argv[]) {     <span class="hljs-comment">// Create a client endpoint</span>     client c;      <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> uri = <span class="hljs-string">"ws://这里附上你自己的ws地址"</span>;      <span class="hljs-keyword">try</span> {         <span class="hljs-comment">// Set logging to be pretty verbose (everything except message payloads)</span>         c.set_access_channels(websocketpp::<span class="hljs-built_in">log</span>::alevel::all);         c.clear_access_channels(websocketpp::<span class="hljs-built_in">log</span>::alevel::frame_payload);          <span class="hljs-comment">// Initialize ASIO</span>         c.init_asio();          <span class="hljs-comment">// Register our message handler</span>         c.set_message_handler(bind(&amp;on_message,&amp;c,::_1,::_2));          websocketpp::lib::error_code ec;         client::connection_ptr con = c.get_connection(uri, ec);         <span class="hljs-keyword">if</span> (ec) {             <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"could not create connection because: "</span> &lt;&lt; ec.message() &lt;&lt; <span class="hljs-built_in">std</span>::endl;             <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;         }          <span class="hljs-comment">// Note that connect here only requests a connection. No network messages are</span>         <span class="hljs-comment">// exchanged until the event loop starts running in the next line.</span>         c.connect(con);          <span class="hljs-comment">// Start the ASIO io_service run loop</span>         <span class="hljs-comment">// this will cause a single connection to be made to the server. c.run()</span>         <span class="hljs-comment">// will exit when this connection is closed.</span>         c.run();     } <span class="hljs-keyword">catch</span> (websocketpp::exception <span class="hljs-keyword">const</span> &amp; e) {         <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cout</span> &lt;&lt; e.what() &lt;&lt; <span class="hljs-built_in">std</span>::endl;     } }</code></pre> <p>至此，我们就完成了websocket++的基本配置。</p> <p>PS.如果编译器提示你 “错误：后面有::的名称一定是类名或命名空间名”或者 其他一些奇奇怪怪的错误，那多半是websocket++和boost的附加目录没有配置好</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-55659.htm">美容现在好做吗（现在这个年头做美容行业有前途没有）</a></p>
                                        <p>下一个：<a href="/news/article-56222.htm">宠物食品加工需要什么证件和手续（宠物食品加工需要什么证件和手续和证件）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-56221.htm" title="在VS2015下配置websocket++,并用C++搭建一个简单的客户端">在VS2015下配置websocket++,并用C++搭建一个简单的客户端</a></li>
                        <li class="py-2"><a href="/news/article-57346.htm" title="宠物粮行业分析图表模板（宠物粮市场前景）">宠物粮行业分析图表模板（宠物粮市场前景）</a></li>
                        <li class="py-2"><a href="/news/article-40369.htm" title="三国杀武将台词语音包下载（三国杀角色台词语音）">三国杀武将台词语音包下载（三国杀角色台词语音）</a></li>
                        <li class="py-2"><a href="/news/article-20957.htm" title="东北农大研究生官网（东北农业大学研究生官网）">东北农大研究生官网（东北农业大学研究生官网）</a></li>
                        <li class="py-2"><a href="/news/article-32147.htm" title="宠物粮食代工（宠物粮食代工一吨2万一贵吗知乎）">宠物粮食代工（宠物粮食代工一吨2万一贵吗知乎）</a></li>
                        <li class="py-2"><a href="/news/article-33091.htm" title="私人出售狗狗的网站有哪些（私人出售狗狗的网站有哪些呢）">私人出售狗狗的网站有哪些（私人出售狗狗的网站有哪些呢）</a></li>
                        <li class="py-2"><a href="/news/article-48240.htm" title="宠物医院的费用（宠物医院费用清单）">宠物医院的费用（宠物医院费用清单）</a></li>
                        <li class="py-2"><a href="/news/article-35658.htm" title="ASP.NET Core WebApi返回结果统一包装实践">ASP.NET Core WebApi返回结果统一包装实践</a></li>
                        <li class="py-2"><a href="/news/article-36197.htm" title="被猫抓了把血挤出来了并打疫苗（被猫抓了把血挤出来了并打疫苗可以吗）">被猫抓了把血挤出来了并打疫苗（被猫抓了把血挤出来了并打疫苗可以吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-10-node-share.htm" title="1月10日→22.5M/S|2025年最新免费节点Fast Socks订阅链接地址">1月10日→22.5M/S|2025年最新免费节点Fast Socks订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">48</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
                <footer class="pt-4 pb-5 bg-light position-relative">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <hr class="border-2x color-10 my-2">
                    </div>
                    <div class="col-lg-5 mt-4">
                        <p class="color-7 mb-0 pr-md-11 pr-lg-0">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">Fast Socks机场节点订阅官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
                <!--/.row-->
            </div>
            <!--/.container-->
        </footer>

        <script src="/assets/website/js/frontend/fastsocks/jquery-3.5.1.min.js"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        <script src="/assets/website/js/frontend/fastsocks/app.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </main>
</body>

</html>